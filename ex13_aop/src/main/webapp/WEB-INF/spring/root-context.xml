<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- 직접 Bean 등록 -->
	<bean id="personDto1" class="com.example.app.domain.dto.PersonDto">
		<constructor-arg name="username" value="홍길동" />
		<constructor-arg name="age" value="11" />
		<constructor-arg name="addr" value="창원" />
		
		<!-- PersonDto dto = new PersonDto(홍길동, 11, 창원); 와 같음-->
	</bean>
	
	<bean id="personDto2" class="com.example.app.domain.dto.PersonDto">
		<constructor-arg name="username" value="홍길동2" />
		<constructor-arg name="age" value="55" />
		<constructor-arg name="addr" value="울산" />
		
		<!-- PersonDto dto = new PersonDto(홍길동, 11, 창원); 와 같음-->
	</bean>

	
	
	<!-- Maven Dependencies/spring-jdbc-5.0.7.RELEASE.jar/org.springframework.jdbc/datasource/DriverManagerDataSource.class 우클릭하고 Copy Qualified Name(경로복사) 붙여넣기 , .class지우기  -->
	<bean id="dataSource1" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- mysql드라이버 있는 위치 구글에 mysql jdbc url검색하면 드라이버위치 , url 쉽게 찾을 수 있음.  -->
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<!-- localhost 번호는 어떻게 확인하지? -->
		<property name="url" value="jdbc:mysql://localhost:3306/testDB" /> 
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>
		
	<!-- Namespaces탭에서 context체크 -->
	<context:component-scan base-package="com.example.app.config" />
	
	<!-- com.example.app.domian.dao에 있는 class들 bean에 넣기 -->
	<context:component-scan base-package="com.example.app.domain.dao" />
	
	<!-- com.example.app.domian.service에 있는 class들 bean에 넣기 -->
	<context:component-scan base-package="com.example.app.domain.service" />
	
	<mybatis-spring:scan base-package="com.example.app.domain.mapper"/>
	

	<context:component-scan base-package="com.example.app.scheduled"/>
	
	<context:component-scan base-package="com.example.app.aop"/>
	
	<!-- 어노테이션 적용? -->
	<aop:aspectj-autoproxy />
	
	
	
	<!-- 
		애플리케이션 전체에서 공유되는 설정 파일
		전역 설정 or Bean의 정의
		주로 비즈니스 로직과 관련된 서비스 , Dao등을 설정
		데이터베이스 연결, 트랜잭션 관리, 보안설정(Spring Security등..)과 같은 애플리케이션 전체에서 공유되는 설정을 포함
		딱 한번 생성되는 Bean들이 정의되며, 모든 웹 요청에 공유
	 -->
		
</beans>
